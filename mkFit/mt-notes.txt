TrackBase, TrackCand, storage of cand hits into a tree structure
----------------------------------------------------------------

The shittiest part of the problem seems to be how one handles backward fit and
pickup of overlap hits. OK, and then getting rid of outliers.

It almost seems like TrackFinalCand class would be needed where one would be
able to add and remove hits relatively easily. Like having a list but this is horrible.

On the other hand, once outward processing is done for a seed, a single
candidate is selected and therefore we can in principle screw up the hit history.
- Will we ever consider more than one Cand from a single seed?
- Have we finally checked if abs diag errors could be used to stop a cand (or at least
  reduce its score)?
  - For shortish tracks, how suspect should one be of the final couple of hits?

? HitStore interface to Track -- could this make Track indepenent of how hits are actually stored?
Several implementations + with/without cache (like N_holes).

? Filling / retrieving data from Matriplexes. MkFinder CopyIn/Out interfaces
... are they overdone, ie, should the guy the fills them up store extra data
elsewhere instead of putting it into Matriplex members of MkFinder?

------------------------------------------------------------------------

- Keep Track as IO object.

- Move all you need to move to TrackBase (need to keep memory layout of Track
  intact so all members before State need to be moved, too).

------------------------------------------------------------------------

Version from devel baseline.
- a lot of no_mc_assoc, should I use something other than just --quality-val?
  See Skype chat w/ Kevin and bash history on phi3.
- will need a "living" devel at least for speed comparisons anyay.


** Some loss of tracks occurs :(
- Ev.6:  2 tracks lost from in 10% pT (all + nH>80%)
- Ev.8:  as above (sort of) and one lost from nH > 80%
- Ev.9:  one track lost eveerywhere
- Ev.10: one track lost from all tracks, 10% pT

It was nMissingHits() in TrackCand score calc ... it should rellay be nInsideMinusOneHits().
Grrr ... this means I have to check where else this could be wrong / inconsistent.

But results are now identical for the first 10 events.

Now to Standard ... were results identical between CE and STD lately?
Nope, slightly worse, 1 to 2 tracks missed.
Why was that? There was something that couldn't be done for std,
after I did the passthrough of cands that miss the layer, IIRC
Oh, and there was also something about score calculation not
being able to do something ... oh, yes, taking the pT at the last
(new) hit (because update is not done yet) which meant we use to old pT
for switching between two score regimes in scoreCalcXyzz().

TODO:
1. resolve nMissingHits naming problem -- renamed all to n/num all/inside/tail minus_one_hits
2. do Standard() -- done, exactly the same results

*** Standard

matevz@dull orig> mkFit/mkFit --cmssw-n2seeds --input-file ../pu70-ccc.bin --build-std --num-events 10 --quality-val
Running with n_threads=1, best_out_of=1
Running test_standard(), operation="read"
  vusize=8, num_th_sim=12, num_th_finder=1
  sizeof(Track)=256, sizeof(Hit)=40, sizeof(SVector3)=12, sizeof(SMatrixSym33)=24, sizeof(MCHitInfo)=16
- reading seeds from file
Constructing SimpleGeometry Cylinder geometry
TrackerInfo::ExecTrackerInfoCreatorPlugin processing 'Geoms/CMS-2017.so'
CMS-2017 -- Create_TrackerInfo finished
Opened file '../pu70-ccc.bin', format version 3, n_max_trk_hits 32, n_layers 72, n_events 100
  Extra sections: Seeds CmsswTracks

Processing event 1
Read complete, 8246 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=8246
found tracks=403  in pT 10%=392  in pT 20%=402     no_mc_assoc=334
  nH >= 80% =352  in pT 10%=343  in pT 20%=352
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.14322  CEMX = 0.00000  FVMX = 0.00000

Processing event 2
Read complete, 9235 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9235
found tracks=457  in pT 10%=434  in pT 20%=454     no_mc_assoc=488
  nH >= 80% =393  in pT 10%=371  in pT 20%=391
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.10336  CEMX = 0.00000  FVMX = 0.00000

Processing event 3
Read complete, 9269 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9269
found tracks=584  in pT 10%=573  in pT 20%=583     no_mc_assoc=524
  nH >= 80% =514  in pT 10%=505  in pT 20%=513
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.12712  CEMX = 0.00000  FVMX = 0.00000

Processing event 4
Read complete, 8966 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=8966
Nan'n'Silly detected 3 silly seeds (fix=0, remove=1).
found tracks=507  in pT 10%=495  in pT 20%=507     no_mc_assoc=475
  nH >= 80% =449  in pT 10%=438  in pT 20%=449
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.11249  CEMX = 0.00000  FVMX = 0.00000

Processing event 5
Read complete, 9334 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9334
found tracks=634  in pT 10%=620  in pT 20%=631     no_mc_assoc=526
  nH >= 80% =566  in pT 10%=555  in pT 20%=563
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.14083  CEMX = 0.00000  FVMX = 0.00000

Processing event 6
Read complete, 9160 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9160
found tracks=577  in pT 10%=554  in pT 20%=576     no_mc_assoc=568
  nH >= 80% =505  in pT 10%=484  in pT 20%=504
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.13251  CEMX = 0.00000  FVMX = 0.00000

Processing event 7
Read complete, 9650 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9650
found tracks=489  in pT 10%=471  in pT 20%=487     no_mc_assoc=490
  nH >= 80% =438  in pT 10%=425  in pT 20%=437
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.11800  CEMX = 0.00000  FVMX = 0.00000

Processing event 8
Read complete, 9737 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9737
found tracks=642  in pT 10%=616  in pT 20%=642     no_mc_assoc=610
  nH >= 80% =581  in pT 10%=558  in pT 20%=581
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.15311  CEMX = 0.00000  FVMX = 0.00000

Processing event 9
Read complete, 9751 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=9751
found tracks=570  in pT 10%=555  in pT 20%=569     no_mc_assoc=612
  nH >= 80% =513  in pT 10%=499  in pT 20%=513
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.14034  CEMX = 0.00000  FVMX = 0.00000

Processing event 10
Read complete, 7377 simtracks on file.
Building tracks with 'runBuildingTestPlexStandard', total simtracks=7377
found tracks=447  in pT 10%=424  in pT 20%=447     no_mc_assoc=407
  nH >= 80% =403  in pT 10%=385  in pT 20%=403
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.09254  CEMX = 0.00000  FVMX = 0.00000

================================================================
=== TOTAL for 10 events
================================================================
Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 1.26352  CEMX = 0.00000  FVMX = 0.00000
Total event > 1 fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 1.12030  CEMX = 0.00000  FVMX = 0.00000
Total event loop time 1.48470 simtracks 90725 seedtracks 17857 builtcands 0 maxhits 0 on lay 0


*** CloneEngine

matevz@dull mkFit> ./mkFit --cmssw-n2seeds --input-file ../../pu70-ccc.bin --build-ce --num-events 10 --quality-val
Running with n_threads=1, best_out_of=1
Running test_standard(), operation="read"
  vusize=8, num_th_sim=12, num_th_finder=1
  sizeof(Track)=256, sizeof(Hit)=40, sizeof(SVector3)=12, sizeof(SMatrixSym33)=24, sizeof(MCHitInfo)=16
- reading seeds from file
Constructing SimpleGeometry Cylinder geometry
TrackerInfo::ExecTrackerInfoCreatorPlugin processing '../Geoms/CMS-2017.so'
CMS-2017 -- Create_TrackerInfo finished
Opened file '../../pu70-ccc.bin', format version 3, n_max_trk_hits 32, n_layers 72, n_events 100
  Extra sections: Seeds CmsswTracks

Processing event 1
Read complete, 8246 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=8246
found tracks=403  in pT 10%=392  in pT 20%=402     no_mc_assoc=334
  nH >= 80% =352  in pT 10%=343  in pT 20%=352
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.06584  FVMX = 0.00000

Processing event 2
Read complete, 9235 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9235
found tracks=457  in pT 10%=434  in pT 20%=454     no_mc_assoc=488
  nH >= 80% =394  in pT 10%=372  in pT 20%=392
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.08970  FVMX = 0.00000

Processing event 3
Read complete, 9269 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9269
found tracks=584  in pT 10%=573  in pT 20%=583     no_mc_assoc=524
  nH >= 80% =514  in pT 10%=505  in pT 20%=513
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.10194  FVMX = 0.00000

Processing event 4
Read complete, 8966 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=8966
Nan'n'Silly detected 3 silly seeds (fix=0, remove=1).
found tracks=508  in pT 10%=497  in pT 20%=508     no_mc_assoc=474
  nH >= 80% =450  in pT 10%=440  in pT 20%=450
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.09384  FVMX = 0.00000

Processing event 5
Read complete, 9334 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9334
found tracks=634  in pT 10%=620  in pT 20%=631     no_mc_assoc=526
  nH >= 80% =566  in pT 10%=555  in pT 20%=563
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.11416  FVMX = 0.00000

Processing event 6
Read complete, 9160 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9160
found tracks=578  in pT 10%=555  in pT 20%=577     no_mc_assoc=567
  nH >= 80% =505  in pT 10%=484  in pT 20%=504
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.10896  FVMX = 0.00000

Processing event 7
Read complete, 9650 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9650
found tracks=489  in pT 10%=471  in pT 20%=487     no_mc_assoc=490
  nH >= 80% =438  in pT 10%=425  in pT 20%=437
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.09512  FVMX = 0.00000

Processing event 8
Read complete, 9737 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9737
found tracks=641  in pT 10%=615  in pT 20%=641     no_mc_assoc=611
  nH >= 80% =581  in pT 10%=558  in pT 20%=581
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.12693  FVMX = 0.00000

Processing event 9
Read complete, 9751 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=9751
found tracks=570  in pT 10%=556  in pT 20%=569     no_mc_assoc=612
  nH >= 80% =513  in pT 10%=500  in pT 20%=513
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.11477  FVMX = 0.00000

Processing event 10
Read complete, 7377 simtracks on file.
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=7377
found tracks=448  in pT 10%=425  in pT 20%=448     no_mc_assoc=406
  nH >= 80% =404  in pT 10%=386  in pT 20%=404
----------------------------------------------------------------
Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.07533  FVMX = 0.00000

================================================================
=== TOTAL for 10 events
================================================================
Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.98659  FVMX = 0.00000
Total event > 1 fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 0.92075  FVMX = 0.00000
Total event loop time 1.15761 simtracks 90725 seedtracks 17857 builtcands 37912 maxhits 4559 on lay 5


================================================================================

Using non-sorted hits from external hit-vector ...
----------------------------------------------

... and keeping hit ranks for access.

*** Summary:

- Not sorting hits does not hurt performance, very little change.

  TO DECIDE: Do we keep both options with ifdefs?

- Test performance without doing the explicit mm_prefetch.

  ifdefs were there (MkFinder) for best-hit, I added them for clone engine
  and for standard. Did not do it for FV yet.

  It seems there is no benefit from prefetchin at all, even when
  hits are not copied into sorted order!
  In fact, about 3% faster.
  [It made me think hits are alrady sorted ... well, they seem to be within
  a module ... but the direction is not necessarily the same.]

  TO DECIDE: Do we remove prefetching instructions or we just
  ifdef them out by default.

- Fix in quality_val where we search for the seed track which was wrong due
  to seed cleaning. Kevin, please review.

  Note that with ranks (and reverse ranks) we could do hit index remapping
  without building of translation maps.
  Kevin and I (tohether) can probably do it rather fast.


*** Funny crash:

SEGV in mm_prefetch when preloading a hit.

Seems to only happen with O3, nun-thr >= 4, prefetching on (obviously).

I'm tracing it down as it really shouldn't happen. Seems more like an icc bug.


*** "Physics performance" test

Compare quality-val output on first 5 events.
1. Expect no change.
2. Observe some improvement with new code for some events ... probably due to fix in
   getting the seed track.


*** Timing tests: clone engine, single thread, pu70-ccc, 500 events

time ./mkFit --cmssw-n2seeds --input-file ../../mictest/mkFit/pu70-ccc-hs.bin --build-ce --num-events 500

- "Manual" prefetching that we have hurts a little.
  Surprisingly, even when not storing sorted hits.

= devel

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.67924  FVMX = 0.00000
  Total event loop time 79.82160 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 6117 on lay 5
  real    1m19.853s  user    1m18.097s  sys     0m1.552s

= hit-sort - no hit copy

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.85903  FVMX = 0.00000
  Total event loop time 79.78304 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m19.819s  user    1m18.050s  sys     0m1.563s

= hit-sort - no hit copy - AVX_512

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 46.86359  FVMX = 0.00000
  Total event loop time 57.06883 simtracks 4943065 seedtracks 1040426 builtcands 3421071 maxhits 5998 on lay 5
  real    0m57.099s  user    0m55.389s  sys     0m1.560s


= hit-sort - no hit copy - no prefetch

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 67.40083  FVMX = 0.00000
  Total event loop time 77.28962 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m17.319s  user    1m15.600s  sys     0m1.521s

= hit-sort - no hit copy - no prefetch - AVX_512

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 44.65550  FVMX = 0.00000
  Total event loop time 54.89823 simtracks 4943065 seedtracks 1040426 builtcands 3421071 maxhits 5998 on lay 5
  real    0m54.925s  user    0m53.196s  sys     0m1.584s

= hit-sort - no hit copy - no prefetch - AVX2

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 53.88735  FVMX = 0.00000
  Total event loop time 63.83459 simtracks 4943065 seedtracks 1040426 builtcands 3421022 maxhits 5998 on lay 5
  real    1m3.861s  user    1m2.114s  sys     0m1.578s

= hit-sort - yes hit copy

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.97530  FVMX = 0.00000
  Total event loop time 80.25051 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m20.279s  user    1m18.494s  sys     0m1.579s

= hit-sort - yes hit copy - no prefetch

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 66.97209  FVMX = 0.00000
  Total event loop time 77.29263 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m17.322s  user    1m15.508s  sys     0m1.615s


*** Timing tests: clone engine, 64 threads / 16 in flight, pu70-ccc, avx-512, 5000 events:

time ./mkFit --cmssw-n2seeds --input-file ../../mictest/mkFit/pu70-ccc-hs.bin --build-ce --num-events 5000 --num-thr 64 --num-thr-ev 16

= devel

  Total event loop time 17.07450 simtracks 49338285 seedtracks 10275105 builtcands 33905375 maxhits 6473 on lay 5
  real    0m17.211s  user    16m14.243s  sys     0m33.480s

= hit-sort - no hit copy - no prefetch

  Total event loop time 16.56905 simtracks 49338285 seedtracks 10275105 builtcands 33905375 maxhits 6347 on lay 5
  real    0m16.692s  user    15m51.343s  sys     0m31.998s



================================================================================

Barrel, maxHolesPerCand=3 losses
--------------------------------

./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_brl-1000-10.bin-5 --geom CMS-2017 --num-events 100 --quality-val --build-ce | grep "FOUND_LABEL" | sort -n -k 8 -k 2,2 > fce-nh-12.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_brl-1000-10.bin-5 --geom CMS-2017 --num-events 100 --quality-val --build-ce | grep "FOUND_LABEL" | sort -n -k 8 -k 2,2 > fce-nh-3.txt

diff -u fce-nh-12.txt fce-nh-3.txt

-FOUND_LABEL      5  pT_mc=     3.34 eta_mc=    -0.35 event= 16

  5 q=-1 pT=  3.341 eta= -0.351 nHits=13  label=   5
    hit  0 lyr= 0 idx=  9 pos r=  3.066 x=   2.025 y=   2.302 z=  -3.178   mc_hit=  9 mc_trk=  5
    hit  1 lyr= 1 idx=  3 pos r=  6.958 x=   4.594 y=   5.225 z=  -4.572   mc_hit= 17 mc_trk=  5
    hit  2 lyr= 2 idx=  3 pos r= 11.062 x=   7.262 y=   8.344 z=  -6.037   mc_hit= 27 mc_trk=  5
    hit  3 lyr= 3 idx=  3 pos r= 16.152 x=  10.505 y=  12.269 z=  -7.853   mc_hit= 39 mc_trk=  5
    hit  4 lyr= 5 idx=  1 pos r= 27.389 x=  17.725 y=  20.880 z= -15.811   mc_hit= 48 mc_trk=  5
    hit  5 lyr= 4 idx=  4 pos r= 27.533 x=  17.510 y=  21.248 z= -16.019   mc_hit= 51 mc_trk=  5
    hit  6 lyr= 8 idx=  4 pos r= 43.306 x=  26.640 y=  34.143 z= -15.240   mc_hit= 89 mc_trk=  5
    hit  7 lyr=11 idx=  0 pos r= 60.026 x=  35.240 y=  48.594 z= -27.604   mc_hit=104 mc_trk=  5
    hit  8 lyr=10 idx=  0 pos r= 59.616 x=  35.355 y=  48.001 z= -27.316   mc_hit=105 mc_trk=  5
    hit  9 lyr=14 idx=  0 pos r= 76.787 x=  43.689 y=  63.147 z= -27.316   mc_hit=158 mc_trk=  5
    hit 10 lyr=15 idx=  0 pos r= 88.083 x=  48.667 y=  73.418 z= -27.313   mc_hit=170 mc_trk=  5
    hit 11 lyr=16 idx=  0 pos r= 97.773 x=  52.614 y=  82.410 z= -45.066   mc_hit=182 mc_trk=  5
    hit 12 lyr=17 idx=  0 pos r=106.757 x=  56.015 y=  90.881 z= -45.977   mc_hit=196 mc_trk=  5

-FOUND_LABEL      5  pT_mc=     6.36 eta_mc=    -0.04 event= 17

  5 q=-1 pT=  6.355 eta= -0.041 nHits=14  label=   5
    hit  0 lyr= 0 idx=  0 pos r=  2.840 x=   2.474 y=   1.394 z=   2.697   mc_hit=  0 mc_trk=  5
    hit  1 lyr= 1 idx=  0 pos r=  6.586 x=   5.795 y=   3.128 z=   2.555   mc_hit= 19 mc_trk=  5
    hit  2 lyr= 2 idx=  0 pos r= 11.037 x=   9.726 y=   5.219 z=   2.368   mc_hit= 44 mc_trk=  5
    hit  3 lyr= 3 idx=  0 pos r= 15.833 x=  13.940 y=   7.507 z=   2.180   mc_hit= 70 mc_trk=  5
    hit  4 lyr= 4 idx=  0 pos r= 24.320 x=  21.351 y=  11.645 z=  -3.694   mc_hit= 90 mc_trk=  5
    hit  5 lyr= 9 idx=  3 pos r= 48.415 x=  42.035 y=  24.022 z=   3.351   mc_hit=150 mc_trk=  5
    hit  6 lyr=11 idx=  4 pos r= 63.176 x=  54.880 y=  31.295 z=   9.079   mc_hit=171 mc_trk=  5
    hit  7 lyr=10 idx=  4 pos r= 62.729 x=  54.062 y=  31.814 z=   9.230   mc_hit=172 mc_trk=  5
    hit  8 lyr=13 idx=  0 pos r= 67.975 x=  58.888 y=  33.953 z=  -8.970   mc_hit=184 mc_trk=  5
    hit  9 lyr=13 idx=  4 pos r= 66.846 x=  57.018 y=  34.890 z=   9.313   mc_hit=193 mc_trk=  5
    hit 10 lyr=12 idx=  5 pos r= 67.295 x=  57.862 y=  34.361 z=   9.232   mc_hit=194 mc_trk=  5
    hit 11 lyr=15 idx=  0 pos r= 88.727 x=  75.412 y=  46.750 z=  -9.231   mc_hit=217 mc_trk=  5
    hit 12 lyr=16 idx=  0 pos r= 94.623 x=  80.155 y=  50.286 z=  -9.231   mc_hit=225 mc_trk=  5
    hit 13 lyr=17 idx=  0 pos r=106.803 x=  89.843 y=  57.750 z=  -9.230   mc_hit=236 mc_trk=  5


================================================================================

Tracing down silly values in track errors
-----------------------------------------

Working with standard finding

Added Track::hasSillyValues() to dump track covariance elements that are ans
or diagonal negative.

Call it from MkFinder::InputTracksAndHitIdcs()
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_ecp-1000-10.bin-5 --build-std --geom CMS-2017 --num-events 900 --quality-val > ecp-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_ecn-1000-10.bin-5 --build-std --geom CMS-2017 --num-events 900 --quality-val > ecn-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/ttbar.bin --build-std --geom CMS-2017 --num-events 10 --quality-val > ttbar-10-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/ttbar_pu.bin --build-std --geom CMS-2017 --num-events 10 --quality-val > ttbarpu-10-silly.txt

* 10 muon
  barrel, transition - clear
  endcaps have 5 - 10 tracks with negative diag elements of track covariance.
  Typically -epsilon

* ttbar, ttbar-pu
  have the above + frequent nans in on and off-diagnoal elements

It turns out the nans and negative diagonal elements mostly appear for seeds
that have a negative diagonal element to start with,

- Most of nans can be fixed by setting negative diagonal elements to 1 (for
  lack of a better value) ... but some persist.
- Practically all nans can be avoided by removing those seeds.
  Negative diagonal elements still remain, but there are really few,
  maybe a couple in ttbar_pu sample.
- I was trying to trace further how they comes about and ended with a huge headache.

Conclusion - nans during track findinf come from bad seeds.
I'll look at the backward fit once we resolve those.

Enabled FP exceptions in main(). The following things showed up:
- Determinant in 2x2 Cramer inversion can be 0.
  Using double just for determinant is good enough.
- Two issues in PropagationMPlex.cc - applyMaterialEffects()
  marked with XXX-KMD
  1. radL can become negative (sqrt), there is comment current code is for
     barrel only
  2. beta^2 can be one for large momentum - then we have sqrt(1 - beta2)
- MkFinder::SelectHitIndices() line 173:
    float dz = nSigmaZ * std::sqrt(Err[iI].ConstAt(itrack, 2, 2));
  When Cov(2,2) turns negative, we have a nan.


Backward fit
------------

./mkFit --cmssw-seeds --read --file-name /bar/mic/mu_ecp-1000-10.bin-5 --build-ce --geom CMS-2017 --num-events 1

chi2 seems too big!

With backwards fit: 14.64713

Test bad fit:
./mkFit --cmssw-seeds --read --file-name /bar/mic/mu_brl-1000-10.bin-5 --build-ce --geom CMS-2017 --num-events 990 --backward-fit-pca --kludge-cms-hit-errors | less



Better sensitive region checks, layer skipping, HoT in tree storage
-------------------------------------------------------------------

./mkFit --cmssw-seeds --clean-seeds --read --file-name /bar/mic/ttbar_pu.bin --build-ce --geom CMS-2017 --num-events 100 --best-out-of 3

Before: 15.667 (wtf??)

After adding checks in SelectHitIndices and storage of WSR_Result
13.97138

After removing (now duplicate) checks in FindCandidatesCloneEngine()
13.81581


Stash of HoTNode/Tree for commit of HitStructures.h. Goes after
EventOfHits << FNORD

struct HoTNode
{
  HitOnTrack m_hot;
  int        m_prev;
  // could have short m_prev, m_ref_count ... if ref-count is needed.

  HoTNode() {}

  HoTNode(HitOnTrack hot, int prev) : m_hot(hot), m_prev(prev) {}
};

struct HoTTree
{
  std::vector<HoTNode> m_nodes;

  HoTTree(int max_size)
  {
    m_nodes.reserve(max_size);
    // For CE it's something like:
    //   n_seed + max_cand * (max_layers - n_seed)
    //   4 + 8 * (32 - 3) = 236
    // Not sure for std. Not relevant for BestHit as it is now.
  }

  // Probably will be around for a long while ... growing as needed.

  // API for adding hits.
};

// Could have common base with Track.
// Track could subclass TrackState.

class Candidate
{
  TrackState m_state;
  int        m_last_hit_node;
  float      m_chi2;
  // int n_hits, n_holes, n_good_hits
};

class Seedling
{
  // vector or array of Candidates. hmmh, probably different size for CE vs. Std.
  // Not if we do selective output from std, not final sorting.
  HoTTree m_hot_tree;
  int     m_label;
  // is_complete
  // arrays for chi2 so we can do selection? then not needed in Canditate?
};


//==============================================================================
//==============================================================================

FNORD

--------------------------------------------------------------------------------


#########
Open issues with endcap
#########

* BestHit for cmssw

Truth seeds: Some events in endcap (more in ec- than ec+) have few mc matching
found tracks (even only 2). The tracks are found but mc matching fails.

Similar for cmssw seeds with reco seed only -- maybe even less tracks are found.

Some of this effect is seen in barrel, too.


* Basic quality

In the following functions (search for XXXXMT4K):
  TrackExtra::setMCTrackIDInfo, MkBuilder::quality_process
we assume there is a single hit per layer in MC track.
In cmssw case, there can be several ... and our algorithms find only one hit
per layer. So some tracks get rejected as not having enough matching hits.

----------------

Test samples on desire:

./mkFit --read --file-name /bar/mic/mu_brl-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds
./mkFit --read --file-name /bar/mic/mu_ecp-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds --num-events 995
./mkFit --read --file-name /bar/mic/mu_ecn-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds --num-events 995


#########
Notes for Kevin
#########

// Dump sim tracks + hits
  for (auto & t : m_event->simTracks_)
  {
    printf("%2d (%2d): ", t.label(), t.nFoundHits());

    for (int i = 0; i < t.nFoundHits(); ++i)
    {
      int idx = t.getHitIdx(i);
      int lyr = t.getHitLyr(i);

      printf("%4d", idx >= 0 ? m_event->layerHits_[lyr][idx].mcHitID() : -1);
    }
    printf("\n");
  }

// Dump cands + hits (would need to build map label to index to
// get it properly sorted)
  for (auto & t : m_event->candidateTracks_)
  {
    printf("%2d (%2d): ", t.label(), t.nFoundHits());

    for (int i = 0; i < t.nFoundHits(); ++i)
    {
      int idx = t.getHitIdx(i);
      int lyr = t.getHitLyr(i);

      printf("%4d", idx >= 0 ? m_event->layerHits_[lyr][idx].mcHitID() : -1);
    }
    printf("\n");
  }

In general, search for XXMT4K.

Thing that is probably most urgent is Validation + some issues with Simulation
and Seeding.

Remapping funcs after finding commented out in:
  MkBuilder::quality_output_BH()
  MkBuilder::quality_output_COMB()

What is needed for validation?


#########
Full detector tracking
#########

0. Open issues:
  a. Storing of hit indices into Track
     Also -- MkFitter and arrays of full hits.
     There is this mkfp->SetNhits() in every building layer loop.
  b. Last seed layer should somhow be known to building functions.

1. Best-hit on x-1-10000-brl.raw

BEFORE:
Building tracks with 'runBuildingTestPlexBestHit', total simtracks=10000
found tracks=9215  in pT 10%=9163  in pT 20%=9195     no_mc_assoc=785
  nH >= 80% =9111  in pT 10%=9106  in pT 20%=9111

AFTER:
Building tracks with 'runBuildingTestPlexBestHit', total simtracks=10000
found tracks=9215  in pT 10%=9165  in pT 20%=9194     no_mc_assoc=785
  nH >= 80% =9115  in pT 10%=9110  in pT 20%=9115

2. Std

BEFORE:
Building tracks with 'runBuildingTestPlexStandard', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

AFTER:
Building tracks with 'runBuildingTestPlexStandard', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

3. Clone engine:

BEFORE:
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

AFTER:
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971


#########
Valgrind running notes
#########

# Valgrind memcheck on OSX, no leak checking
valgrind --log-file=vg.5 --error-limit=no --dsymutil=yes --leak-check=no --time-stamp=yes ./mkFit > o.5 2> e.5

# Valgrind with remote gdb
valgrind --vgdb=yes --vgdb-error=0 --error-limit=no --leak-check=no --track-origins=yes --time-stamp=yes ./mkFit
gdb ./mkFit
  target remote | vgdb


########
Thread pinning notes
########

Thread pinning on host

  7.07s -- CandCloner cloner(8, 20); // Same core
  6.13s -- CandCloner cloner(1, 2);  // Same socket, another core
  7.90s -- CandCloner cloner(1, 7);  // Another socket

Thread pinning on MIC (no real difference)

 38.00s -- CandCloner cloner(1,  2);  // Same core (any pair of 1,2,3,4)
 37.95s -- CandCloner cloner(1,  5);  // Another cpu
 36.75s -- CandCloner cloner(1, 25);  // Another cpu
 37.75s -- CandCloner cloner(1, 233); // Another cpu
